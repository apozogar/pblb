spring:
  application:
    name: fanops

  datasource:
    url: jdbc:postgresql://localhost:5432/pblb
    username: postgres
    password: toor
    driver-class-name: org.postgresql.Driver

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update  # Genera/actualiza las tablas automáticamente
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true

  liquibase:
    enabled: false  # Deshabilitamos liquibase por ahora ya que usaremos hibernate para generar la estructura

  mail:
    host: sandbox.smtp.mailtrap.io
    port: 587
    username: ffc01dec03cf95
    password: f7d9848479d07f
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

server:
  port: 8080

logging:
  level:
    root: INFO
    com.softwells.fanops: DEBUG

# Configuraciones de Actuator
management:
  endpoints:
    web:
      base-path: /management # Mueve todos los endpoints a /management (ej: /management/health)
      exposure:
        include: health, info, prometheus # Exponemos explícitamente los endpoints que queremos

# Configuraciones específicas de la aplicación
app:
  security:
    jwt:
      secret: eW91ci1zdXBlci1zZWNyZXQta2V5LXRoYXQtaXMtbG9uZy1hbmQtc2VjdXJlLWFuZC1hdC1sZWFzdC0yNTYtYml0cw==
      expiration: 1209600000  # 14 dias en milisegundos

# Dirección de correo para el remitente
mail:
  from:
    address: ${spring.mail.username}
